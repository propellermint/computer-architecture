.386                        ;   директива использования системы команд процессора Intel.386
.model flat, stdcall        ;   директива использования сплошной модели ОП с передачей аргументов в функции через стек 
                    ;   с последующим возвращением вершины стека в то состояние, которое было до передачи аргументов
option casemap:none         ;   установка чувствительности к ПРОПИСНЫМ или строчным символам (STR notequal str)
 
;##############################################################
include \masm32\include\windows.inc     ;
include \masm32\include\user32.inc      ;
include \masm32\include\kernel32.inc    ;   директивы подключения файлов и библиотек для вызова API-функций
includelib \masm32\lib\user32.lib       ;
includelib \masm32\lib\kernel32.lib     ;

;##############################################################
;Last shifted out bit
.data               ;   директива объявления секции данных ;
                ;   строковая переменная для вывода текста в названии окна (заканчивается нулевым байтом)
    num DD 10       ;   искомое число, переменная в памяти размером Word=16 бит =2 Байт - 1001101
    pow  DB 29       ;   количество сдвигов
    shift  DW 0     ;   0 - влево, 1 - вправо 
    
    str1 db "Результат работы программы",0
 
    str2 db "последний выдвинутый бит равен 0",0
 
    str3 db "последний выдвинутый бит равен 1",0

    str4 db "число", 0
    str5 db "aAAAAAAAAAAAA", 0

;############################################################## 

.code               ;   директива объявления секции кода 
start:              ;   метка –точка входа в программу –адрес первой исполняемой команды, который будет помещён в EIP
                ;   при запуске программы. При переходе по метке компилятор подставляет соответствующий ей адрес 
    MOV CL,pow      ;   Занесение содержимого из ячейки ОП с адресом МЕМ1 в регистр CL
    MOV BX,shift    ;   Занесение содержимого из ячейки ОП с адресом МЕМ2 в регистр BХ
    MOV EDX, num     ;   Занесение содержимого из ячейки ОП с адресом МЕМ2 в регистр DХ
   
    CMP BX,0        ;   Сравнение BX с нулём и установка флагов (равно, тогда EFL.ZF=1)

    JZ ZERO         ;   Условный переход по равенству (при ZF=1) на метку ZERO (кратно), 
                ;   иначе (не равно, не кратно) переход к следующей команде программы.
 
    shr EDX,CL       ;  При выполнении команд сдвига флаг CF  всегда содержит значение 
                ;   последнего  выдвинутого  бита.
    JC METKA        ; Переход к метке METKA
    
    invoke MessageBox,NULL, addr str2, addr str1, MB_OK     ;   вызов API-функции MessageBox –вывода на экран окна
                                                        ;   и передача параметров: названия окна –str1 и сообщения –str2 
    JMP STOP                                                ;   Безусловный переход на метку STOP
    
    ZERO:   shl EDX,CL
            JC METKA
            invoke MessageBox,NULL, addr str2, addr str1, MB_OK
            JMP STOP
        
METKA: invoke MessageBox,NULL, addr str3, addr str1, MB_OK
STOP: invoke ExitProcess, NULL
 
end start